{"version":3,"sources":["webpack:///./node_modules/bootstrap-vue/es/directives/tooltip/index.js","webpack:///./node_modules/bootstrap-vue/es/directives/popover/popover.js","webpack:///./node_modules/bootstrap-vue/es/directives/scrollspy/scrollspy.js","webpack:///./node_modules/bootstrap-vue/es/directives/scrollspy/index.js","webpack:///./node_modules/bootstrap-vue/es/directives/tooltip/tooltip.js","webpack:///./node_modules/bootstrap-vue/es/index.js","webpack:///./node_modules/bootstrap-vue/es/directives/toggle/toggle.js","webpack:///./node_modules/bootstrap-vue/es/directives/index.js","webpack:///./node_modules/bootstrap-vue/es/directives/modal/index.js","webpack:///./node_modules/bootstrap-vue/es/directives/toggle/index.js","webpack:///./node_modules/bootstrap-vue/es/directives/scrollspy/scrollspy.class.js","webpack:///./node_modules/bootstrap-vue/es/directives/popover/index.js","webpack:///./node_modules/bootstrap-vue/es/directives/modal/modal.js"],"names":["exports","__esModule","default","_tooltip","__webpack_require__","_plugins","directives","bTooltip","_default","install","Vue","registerDirectives","_popper","_popover","_object","_warn","_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","obj","value","defineProperty","configurable","writable","_typeof","Symbol","iterator","constructor","prototype","inBrowser","window","document","BVPO","validTriggers","focus","hover","click","blur","parseBindings","bindings","config","content","arg","container","modifiers","mod","test","html","animation","placement","boundary","delay","parseInt","slice","offset","selectedTriggers","triggers","trigger","trim","split","join","applyBVPO","el","vnode","updateConfig","context","$root","removeBVPO","destroy","bind","inserted","update","oldValue","componentUpdated","unbind","_scrollspy","_env","BVSS","makeConfig","binding","element","method","Math","round","k","Boolean","DefaultType","addBVSS","isServer","cfg","removeBVSS","dispose","bScrollspy","BVTT","title","applyBVTT","removeBVTT","componentPlugins","directivePlugins","VuePlugin","plugin","use","_plugin","vueUse","_target","_dom","listenTypes","BVT","EVENT_TOGGLE","EVENT_STATE","targets","_ref","$emit","setAttr","tagName","id","state","indexOf","removeClass","addClass","$on","$off","_toggle","Toggle","_modal","Modal","Scrollspy","Tooltip","Popover","bModal","bToggle","_observeDom","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","NAME","ACTIVATE_EVENT","Default","throttle","ClassName","DROPDOWN_ITEM","ACTIVE","Selector","NAV_LIST_GROUP","NAV_LINKS","NAV_ITEMS","LIST_ITEMS","DROPDOWN","DROPDOWN_ITEMS","DROPDOWN_TOGGLE","OffsetMethod","OFFSET","POSITION","HREF_REGEX","TransitionEndEvents","EventOptions","passive","capture","toType","toString","call","match","toLowerCase","typeCheckConfig","componentName","configTypes","property","hasOwnProperty","expectedTypes","valueType","isElement","_isVue","RegExp","ScrollSpy","this","$el","$scroller","$selector","$offsets","$targets","$activeTarget","$scrollHeight","$resizeTimeout","$obs_scroller","$obs_targets","$config","unlisten","Name","self","$nextTick","listen","clearTimeout","_this","scroller","getScroller","eventOn","evtName","setObservers","handleEvent","_this2","eventOff","on","_this3","disconnect","subtree","childList","attributes","attributeFilter","characterData","evt","type","resizeThrottle","setTimeout","refresh","process","_this4","autoMethod","methodFn","position","offsetBase","getScrollTop","getScrollHeight","selectAll","map","link","getAttr","href","select","isVisible","top","item","sort","a","b","reduce","memo","push","scrollTop","scrollHeight","maxScroll","getOffsetHeight","activate","clear","isActiveTarget","pageYOffset","max","body","documentElement","innerHeight","getBCR","height","_this5","links","selector","hasClass","dropdown","closest","setActiveState","matches","parentElement","sibling","previousElementSibling","_this6","active","get","bPopover","bindTargets","elm","unbindTargets","removeAttr"],"mappings":"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","file":"js/chunk-vendors~80c68398.f54d0236.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _tooltip = require(\"./tooltip\");\n\nvar _plugins = require(\"../../utils/plugins\");\n\nvar directives = {\n  bTooltip: _tooltip.default\n};\nvar _default = {\n  install: function install(Vue) {\n    (0, _plugins.registerDirectives)(Vue, directives);\n  }\n};\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _popper = require(\"popper.js\");\n\nvar _popover = require(\"../../utils/popover.class\");\n\nvar _object = require(\"../../utils/object\");\n\nvar _warn = require(\"../../utils/warn\");\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar inBrowser = typeof window !== 'undefined' && typeof document !== 'undefined'; // Key which we use to store tooltip object on element\n\nvar BVPO = '__BV_PopOver__'; // Valid event triggers\n\nvar validTriggers = {\n  focus: true,\n  hover: true,\n  click: true,\n  blur: true // Build a PopOver config based on bindings (if any)\n  // Arguments and modifiers take precedence over pased value config object\n\n  /* istanbul ignore next: not easy to test */\n\n};\n\nfunction parseBindings(bindings) {\n  // We start out with a blank config\n  var config = {}; // Process bindings.value\n\n  if (typeof bindings.value === 'string') {\n    // Value is popover content (html optionally supported)\n    config.content = bindings.value;\n  } else if (typeof bindings.value === 'function') {\n    // Content generator function\n    config.content = bindings.value;\n  } else if (_typeof(bindings.value) === 'object') {\n    // Value is config object, so merge\n    config = _objectSpread({}, config, bindings.value);\n  } // If Argument, assume element ID of container element\n\n\n  if (bindings.arg) {\n    // Element ID specified as arg. We must prepend '#' to become a CSS selector\n    config.container = \"#\".concat(bindings.arg);\n  } // Process modifiers\n\n\n  (0, _object.keys)(bindings.modifiers).forEach(function (mod) {\n    if (/^html$/.test(mod)) {\n      // Title allows HTML\n      config.html = true;\n    } else if (/^nofade$/.test(mod)) {\n      // no animation\n      config.animation = false;\n    } else if (/^(auto|top(left|right)?|bottom(left|right)?|left(top|bottom)?|right(top|bottom)?)$/.test(mod)) {\n      // placement of popover\n      config.placement = mod;\n    } else if (/^(window|viewport)$/.test(mod)) {\n      // bounday of popover\n      config.boundary = mod;\n    } else if (/^d\\d+$/.test(mod)) {\n      // delay value\n      var delay = parseInt(mod.slice(1), 10) || 0;\n\n      if (delay) {\n        config.delay = delay;\n      }\n    } else if (/^o-?\\d+$/.test(mod)) {\n      // offset value (negative allowed)\n      var offset = parseInt(mod.slice(1), 10) || 0;\n\n      if (offset) {\n        config.offset = offset;\n      }\n    }\n  }); // Special handling of event trigger modifiers Trigger is a space separated list\n\n  var selectedTriggers = {}; // parse current config object trigger\n\n  var triggers = typeof config.trigger === 'string' ? config.trigger.trim().split(/\\s+/) : [];\n  triggers.forEach(function (trigger) {\n    if (validTriggers[trigger]) {\n      selectedTriggers[trigger] = true;\n    }\n  }); // Parse Modifiers for triggers\n\n  (0, _object.keys)(validTriggers).forEach(function (trigger) {\n    if (bindings.modifiers[trigger]) {\n      selectedTriggers[trigger] = true;\n    }\n  }); // Sanitize triggers\n\n  config.trigger = (0, _object.keys)(selectedTriggers).join(' ');\n\n  if (config.trigger === 'blur') {\n    // Blur by itself is useless, so convert it to focus\n    config.trigger = 'focus';\n  }\n\n  if (!config.trigger) {\n    // remove trigger config\n    delete config.trigger;\n  }\n\n  return config;\n} //\n// Add or Update popover on our element\n//\n\n/* istanbul ignore next: not easy to test */\n\n\nfunction applyBVPO(el, bindings, vnode) {\n  if (!inBrowser) {\n    return;\n  }\n\n  if (!_popper.default) {\n    // Popper is required for tooltips to work\n    (0, _warn.default)('v-b-popover: Popper.js is required for popovers to work');\n    return;\n  }\n\n  if (el[BVPO]) {\n    el[BVPO].updateConfig(parseBindings(bindings));\n  } else {\n    el[BVPO] = new _popover.default(el, parseBindings(bindings), vnode.context.$root);\n  }\n} //\n// Remove popover on our element\n//\n\n/* istanbul ignore next */\n\n\nfunction removeBVPO(el) {\n  if (!inBrowser) {\n    return;\n  }\n\n  if (el[BVPO]) {\n    el[BVPO].destroy();\n    el[BVPO] = null;\n    delete el[BVPO];\n  }\n}\n/*\n * Export our directive\n */\n\n/* istanbul ignore next: not easy to test */\n\n\nvar _default = {\n  bind: function bind(el, bindings, vnode) {\n    applyBVPO(el, bindings, vnode);\n  },\n  inserted: function inserted(el, bindings, vnode) {\n    applyBVPO(el, bindings, vnode);\n  },\n  update: function update(el, bindings, vnode) {\n    if (bindings.value !== bindings.oldValue) {\n      applyBVPO(el, bindings, vnode);\n    }\n  },\n  componentUpdated: function componentUpdated(el, bindings, vnode) {\n    if (bindings.value !== bindings.oldValue) {\n      applyBVPO(el, bindings, vnode);\n    }\n  },\n  unbind: function unbind(el) {\n    removeBVPO(el);\n  }\n};\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _scrollspy = require(\"./scrollspy.class\");\n\nvar _object = require(\"../../utils/object\");\n\nvar _env = require(\"../../utils/env\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n// Key we use to store our Instance\nvar BVSS = '__BV_ScrollSpy__'; // Generate config from bindings\n\nfunction makeConfig(binding)\n/* istanbul ignore next: not easy to test */\n{\n  var config = {}; // If Argument, assume element ID\n\n  if (binding.arg) {\n    // Element ID specified as arg. We must pre-pend #\n    config.element = '#' + binding.arg;\n  } // Process modifiers\n\n\n  (0, _object.keys)(binding.modifiers).forEach(function (mod) {\n    if (/^\\d+$/.test(mod)) {\n      // Offest value\n      config.offset = parseInt(mod, 10);\n    } else if (/^(auto|position|offset)$/.test(mod)) {\n      // Offset method\n      config.method = mod;\n    }\n  }); // Process value\n\n  if (typeof binding.value === 'string') {\n    // Value is a CSS ID or selector\n    config.element = binding.value;\n  } else if (typeof binding.value === 'number') {\n    // Value is offset\n    config.offset = Math.round(binding.value);\n  } else if (_typeof(binding.value) === 'object') {\n    // Value is config object\n    // Filter the object based on our supported config options\n    (0, _object.keys)(binding.value).filter(function (k) {\n      return Boolean(_scrollspy.default.DefaultType[k]);\n    }).forEach(function (k) {\n      config[k] = binding.value[k];\n    });\n  }\n\n  return config;\n}\n\nfunction addBVSS(el, binding, vnode)\n/* istanbul ignore next: not easy to test */\n{\n  if (_env.isServer) {\n    return;\n  }\n\n  var cfg = makeConfig(binding);\n\n  if (!el[BVSS]) {\n    el[BVSS] = new _scrollspy.default(el, cfg, vnode.context.$root);\n  } else {\n    el[BVSS].updateConfig(cfg, vnode.context.$root);\n  }\n\n  return el[BVSS];\n}\n\nfunction removeBVSS(el)\n/* istanbul ignore next: not easy to test */\n{\n  if (el[BVSS]) {\n    el[BVSS].dispose();\n    el[BVSS] = null;\n  }\n}\n/*\n * Export our directive\n */\n\n\nvar _default = {\n  bind: function bind(el, binding, vnode)\n  /* istanbul ignore next: not easy to test */\n  {\n    addBVSS(el, binding, vnode);\n  },\n  inserted: function inserted(el, binding, vnode)\n  /* istanbul ignore next: not easy to test */\n  {\n    addBVSS(el, binding, vnode);\n  },\n  update: function update(el, binding, vnode)\n  /* istanbul ignore next: not easy to test */\n  {\n    addBVSS(el, binding, vnode);\n  },\n  componentUpdated: function componentUpdated(el, binding, vnode)\n  /* istanbul ignore next: not easy to test */\n  {\n    addBVSS(el, binding, vnode);\n  },\n  unbind: function unbind(el)\n  /* istanbul ignore next: not easy to test */\n  {\n    if (_env.isServer) {\n      return;\n    } // Remove scroll event listener on scrollElId\n\n\n    removeBVSS(el);\n  }\n};\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _scrollspy = require(\"./scrollspy\");\n\nvar _plugins = require(\"../../utils/plugins\");\n\nvar directives = {\n  bScrollspy: _scrollspy.default\n};\nvar _default = {\n  install: function install(Vue) {\n    (0, _plugins.registerDirectives)(Vue, directives);\n  }\n};\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _popper = require(\"popper.js\");\n\nvar _tooltip = require(\"../../utils/tooltip.class\");\n\nvar _object = require(\"../../utils/object\");\n\nvar _warn = require(\"../../utils/warn\");\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar inBrowser = typeof window !== 'undefined' && typeof document !== 'undefined'; // Key which we use to store tooltip object on element\n\nvar BVTT = '__BV_ToolTip__'; // Valid event triggers\n\nvar validTriggers = {\n  focus: true,\n  hover: true,\n  click: true,\n  blur: true // Build a ToolTip config based on bindings (if any)\n  // Arguments and modifiers take precedence over passed value config object\n\n  /* istanbul ignore next: not easy to test */\n\n};\n\nfunction parseBindings(bindings) {\n  // We start out with a blank config\n  var config = {}; // Process bindings.value\n\n  if (typeof bindings.value === 'string') {\n    // Value is tooltip content (html optionally supported)\n    config.title = bindings.value;\n  } else if (typeof bindings.value === 'function') {\n    // Title generator function\n    config.title = bindings.value;\n  } else if (_typeof(bindings.value) === 'object') {\n    // Value is config object, so merge\n    config = _objectSpread({}, config, bindings.value);\n  } // If Argument, assume element ID of container element\n\n\n  if (bindings.arg) {\n    // Element ID specified as arg. We must prepend '#' to become a CSS selector\n    config.container = \"#\".concat(bindings.arg);\n  } // Process modifiers\n\n\n  (0, _object.keys)(bindings.modifiers).forEach(function (mod) {\n    if (/^html$/.test(mod)) {\n      // Title allows HTML\n      config.html = true;\n    } else if (/^nofade$/.test(mod)) {\n      // no animation\n      config.animation = false;\n    } else if (/^(auto|top(left|right)?|bottom(left|right)?|left(top|bottom)?|right(top|bottom)?)$/.test(mod)) {\n      // placement of tooltip\n      config.placement = mod;\n    } else if (/^(window|viewport)$/.test(mod)) {\n      // bounday of tooltip\n      config.boundary = mod;\n    } else if (/^d\\d+$/.test(mod)) {\n      // delay value\n      var delay = parseInt(mod.slice(1), 10) || 0;\n\n      if (delay) {\n        config.delay = delay;\n      }\n    } else if (/^o-?\\d+$/.test(mod)) {\n      // offset value. Negative allowed\n      var offset = parseInt(mod.slice(1), 10) || 0;\n\n      if (offset) {\n        config.offset = offset;\n      }\n    }\n  }); // Special handling of event trigger modifiers Trigger is a space separated list\n\n  var selectedTriggers = {}; // parse current config object trigger\n\n  var triggers = typeof config.trigger === 'string' ? config.trigger.trim().split(/\\s+/) : [];\n  triggers.forEach(function (trigger) {\n    if (validTriggers[trigger]) {\n      selectedTriggers[trigger] = true;\n    }\n  }); // Parse Modifiers for triggers\n\n  (0, _object.keys)(validTriggers).forEach(function (trigger) {\n    if (bindings.modifiers[trigger]) {\n      selectedTriggers[trigger] = true;\n    }\n  }); // Sanitize triggers\n\n  config.trigger = (0, _object.keys)(selectedTriggers).join(' ');\n\n  if (config.trigger === 'blur') {\n    // Blur by itself is useless, so convert it to 'focus'\n    config.trigger = 'focus';\n  }\n\n  if (!config.trigger) {\n    // remove trigger config\n    delete config.trigger;\n  }\n\n  return config;\n} //\n// Add or Update tooltip on our element\n//\n\n/* istanbul ignore next: not easy to test */\n\n\nfunction applyBVTT(el, bindings, vnode) {\n  if (!inBrowser) {\n    return;\n  }\n\n  if (!_popper.default) {\n    // Popper is required for tooltips to work\n    (0, _warn.default)('v-b-tooltip: Popper.js is required for tooltips to work');\n    return;\n  }\n\n  if (el[BVTT]) {\n    el[BVTT].updateConfig(parseBindings(bindings));\n  } else {\n    el[BVTT] = new _tooltip.default(el, parseBindings(bindings), vnode.context.$root);\n  }\n} //\n// Remove tooltip on our element\n//\n\n/* istanbul ignore next: not easy to test */\n\n\nfunction removeBVTT(el) {\n  if (!inBrowser) {\n    return;\n  }\n\n  if (el[BVTT]) {\n    el[BVTT].destroy();\n    el[BVTT] = null;\n    delete el[BVTT];\n  }\n}\n/*\n * Export our directive\n */\n\n/* istanbul ignore next: not easy to test */\n\n\nvar _default = {\n  bind: function bind(el, bindings, vnode) {\n    applyBVTT(el, bindings, vnode);\n  },\n  inserted: function inserted(el, bindings, vnode) {\n    applyBVTT(el, bindings, vnode);\n  },\n  update: function update(el, bindings, vnode) {\n    if (bindings.value !== bindings.oldValue) {\n      applyBVTT(el, bindings, vnode);\n    }\n  },\n  componentUpdated: function componentUpdated(el, bindings, vnode) {\n    if (bindings.value !== bindings.oldValue) {\n      applyBVTT(el, bindings, vnode);\n    }\n  },\n  unbind: function unbind(el) {\n    removeBVTT(el);\n  }\n};\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar componentPlugins = require(\"./components\");\n\nvar directivePlugins = require(\"./directives\");\n\nvar _plugins = require(\"./utils/plugins\");\n\nvar VuePlugin = {\n  install: function install(Vue) {\n    // Register component plugins\n    for (var plugin in componentPlugins) {\n      Vue.use(componentPlugins[plugin]);\n    } // Register directive plugins\n\n\n    for (var _plugin in directivePlugins) {\n      Vue.use(directivePlugins[_plugin]);\n    }\n  }\n};\n(0, _plugins.vueUse)(VuePlugin);\nvar _default = VuePlugin;\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _target = require(\"../../utils/target\");\n\nvar _dom = require(\"../../utils/dom\");\n\n// Are we client side?\nvar inBrowser = typeof window !== 'undefined'; // target listen types\n\nvar listenTypes = {\n  click: true // Property key for handler storage\n\n};\nvar BVT = '__BV_toggle__'; // Emitted Control Event for collapse (emitted to collapse)\n\nvar EVENT_TOGGLE = 'bv::toggle::collapse'; // Listen to Event for toggle state update (Emited by collapse)\n\nvar EVENT_STATE = 'bv::collapse::state';\nvar _default = {\n  bind: function bind(el, binding, vnode) {\n    var targets = (0, _target.default)(vnode, binding, listenTypes, function (_ref) {\n      var targets = _ref.targets,\n          vnode = _ref.vnode;\n      targets.forEach(function (target) {\n        vnode.context.$root.$emit(EVENT_TOGGLE, target);\n      });\n    });\n\n    if (inBrowser && vnode.context && targets.length > 0) {\n      // Add aria attributes to element\n      (0, _dom.setAttr)(el, 'aria-controls', targets.join(' '));\n      (0, _dom.setAttr)(el, 'aria-expanded', 'false');\n\n      if (el.tagName !== 'BUTTON') {\n        // If element is not a button, we add `role=\"button\"` for accessibility\n        (0, _dom.setAttr)(el, 'role', 'button');\n      } // Toggle state hadnler, stored on element\n\n\n      el[BVT] = function toggleDirectiveHandler(id, state) {\n        if (targets.indexOf(id) !== -1) {\n          // Set aria-expanded state\n          (0, _dom.setAttr)(el, 'aria-expanded', state ? 'true' : 'false'); // Set/Clear 'collapsed' class state\n\n          if (state) {\n            (0, _dom.removeClass)(el, 'collapsed');\n          } else {\n            (0, _dom.addClass)(el, 'collapsed');\n          }\n        }\n      }; // Listen for toggle state changes\n\n\n      vnode.context.$root.$on(EVENT_STATE, el[BVT]);\n    }\n  },\n  unbind: function unbind(el, binding, vnode) {\n    if (el[BVT]) {\n      // Remove our $root listener\n      vnode.context.$root.$off(EVENT_STATE, el[BVT]);\n      el[BVT] = null;\n    }\n  }\n};\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\n\nvar _toggle = require(\"./toggle\");\n\nexports.Toggle = _toggle.default;\n\nvar _modal = require(\"./modal\");\n\nexports.Modal = _modal.default;\n\nvar _scrollspy = require(\"./scrollspy\");\n\nexports.Scrollspy = _scrollspy.default;\n\nvar _tooltip = require(\"./tooltip\");\n\nexports.Tooltip = _tooltip.default;\n\nvar _popover = require(\"./popover\");\n\nexports.Popover = _popover.default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _modal = require(\"./modal\");\n\nvar _plugins = require(\"../../utils/plugins\");\n\nvar directives = {\n  bModal: _modal.default\n};\nvar _default = {\n  install: function install(Vue) {\n    (0, _plugins.registerDirectives)(Vue, directives);\n  }\n};\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _toggle = require(\"./toggle\");\n\nvar _plugins = require(\"../../utils/plugins\");\n\nvar directives = {\n  bToggle: _toggle.default\n};\nvar _default = {\n  install: function install(Vue) {\n    (0, _plugins.registerDirectives)(Vue, directives);\n  }\n};\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _observeDom = require(\"../../utils/observe-dom\");\n\nvar _warn = require(\"../../utils/warn\");\n\nvar _dom = require(\"../../utils/dom\");\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/*\n * Constants / Defaults\n */\nvar NAME = 'v-b-scrollspy';\nvar ACTIVATE_EVENT = 'bv::scrollspy::activate';\nvar Default = {\n  element: 'body',\n  offset: 10,\n  method: 'auto',\n  throttle: 75\n};\nvar DefaultType = {\n  element: '(string|element|component)',\n  offset: 'number',\n  method: 'string',\n  throttle: 'number'\n};\nvar ClassName = {\n  DROPDOWN_ITEM: 'dropdown-item',\n  ACTIVE: 'active'\n};\nvar Selector = {\n  ACTIVE: '.active',\n  NAV_LIST_GROUP: '.nav, .list-group',\n  NAV_LINKS: '.nav-link',\n  NAV_ITEMS: '.nav-item',\n  LIST_ITEMS: '.list-group-item',\n  DROPDOWN: '.dropdown, .dropup',\n  DROPDOWN_ITEMS: '.dropdown-item',\n  DROPDOWN_TOGGLE: '.dropdown-toggle'\n};\nvar OffsetMethod = {\n  OFFSET: 'offset',\n  POSITION: 'position' // HREFs must start with # but can be === '#', or start with '#/' or '#!' (which can be router links)\n\n};\nvar HREF_REGEX = /^#[^/!]+/; // Transition Events\n\nvar TransitionEndEvents = ['webkitTransitionEnd', 'transitionend', 'otransitionend', 'oTransitionEnd']; // Options for events\n\nvar EventOptions = {\n  passive: true,\n  capture: false\n  /*\n   * Utility Methods\n   */\n  // Better var type detection\n\n};\n\nfunction toType(obj)\n/* istanbul ignore next: not easy to test */\n{\n  return {}.toString.call(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n} // Check config properties for expected types\n\n\nfunction typeCheckConfig(componentName, config, configTypes)\n/* istanbul ignore next: not easy to test */\n{\n  for (var property in configTypes) {\n    if (Object.prototype.hasOwnProperty.call(configTypes, property)) {\n      var expectedTypes = configTypes[property];\n      var value = config[property];\n      var valueType = value && (0, _dom.isElement)(value) ? 'element' : toType(value); // handle Vue instances\n\n      valueType = value && value._isVue ? 'component' : valueType;\n\n      if (!new RegExp(expectedTypes).test(valueType)) {\n        (0, _warn.default)(\"\".concat(componentName, \": Option \\\"\").concat(property, \"\\\" provided type \\\"\").concat(valueType, \"\\\" but expected type \\\"\").concat(expectedTypes, \"\\\"\"));\n      }\n    }\n  }\n}\n/*\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\n/* istanbul ignore next: not easy to test */\n\n\nvar ScrollSpy\n/* istanbul ignore next: not easy to test */\n=\n/*#__PURE__*/\nfunction () {\n  function ScrollSpy(element, config, $root) {\n    _classCallCheck(this, ScrollSpy);\n\n    // The element we activate links in\n    this.$el = element;\n    this.$scroller = null;\n    this.$selector = [Selector.NAV_LINKS, Selector.LIST_ITEMS, Selector.DROPDOWN_ITEMS].join(',');\n    this.$offsets = [];\n    this.$targets = [];\n    this.$activeTarget = null;\n    this.$scrollHeight = 0;\n    this.$resizeTimeout = null;\n    this.$obs_scroller = null;\n    this.$obs_targets = null;\n    this.$root = $root || null;\n    this.$config = null;\n    this.updateConfig(config);\n  }\n\n  _createClass(ScrollSpy, [{\n    key: \"updateConfig\",\n    value: function updateConfig(config, $root) {\n      if (this.$scroller) {\n        // Just in case out scroll element has changed\n        this.unlisten();\n        this.$scroller = null;\n      }\n\n      var cfg = _objectSpread({}, this.constructor.Default, config);\n\n      if ($root) {\n        this.$root = $root;\n      }\n\n      typeCheckConfig(this.constructor.Name, cfg, this.constructor.DefaultType);\n      this.$config = cfg;\n\n      if (this.$root) {\n        var self = this;\n        this.$root.$nextTick(function () {\n          self.listen();\n        });\n      } else {\n        this.listen();\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.unlisten();\n      clearTimeout(this.$resizeTimeout);\n      this.$resizeTimeout = null;\n      this.$el = null;\n      this.$config = null;\n      this.$scroller = null;\n      this.$selector = null;\n      this.$offsets = null;\n      this.$targets = null;\n      this.$activeTarget = null;\n      this.$scrollHeight = null;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen() {\n      var _this = this;\n\n      var scroller = this.getScroller();\n\n      if (scroller && scroller.tagName !== 'BODY') {\n        (0, _dom.eventOn)(scroller, 'scroll', this, EventOptions);\n      }\n\n      (0, _dom.eventOn)(window, 'scroll', this, EventOptions);\n      (0, _dom.eventOn)(window, 'resize', this, EventOptions);\n      (0, _dom.eventOn)(window, 'orientationchange', this, EventOptions);\n      TransitionEndEvents.forEach(function (evtName) {\n        (0, _dom.eventOn)(window, evtName, _this, EventOptions);\n      });\n      this.setObservers(true); // Scedule a refresh\n\n      this.handleEvent('refresh');\n    }\n  }, {\n    key: \"unlisten\",\n    value: function unlisten() {\n      var _this2 = this;\n\n      var scroller = this.getScroller();\n      this.setObservers(false);\n\n      if (scroller && scroller.tagName !== 'BODY') {\n        (0, _dom.eventOff)(scroller, 'scroll', this, EventOptions);\n      }\n\n      (0, _dom.eventOff)(window, 'scroll', this, EventOptions);\n      (0, _dom.eventOff)(window, 'resize', this, EventOptions);\n      (0, _dom.eventOff)(window, 'orientationchange', this, EventOptions);\n      TransitionEndEvents.forEach(function (evtName) {\n        (0, _dom.eventOff)(window, evtName, _this2, EventOptions);\n      });\n    }\n  }, {\n    key: \"setObservers\",\n    value: function setObservers(on) {\n      var _this3 = this;\n\n      // We observe both the scroller for content changes, and the target links\n      if (this.$obs_scroller) {\n        this.$obs_scroller.disconnect();\n        this.$obs_scroller = null;\n      }\n\n      if (this.$obs_targets) {\n        this.$obs_targets.disconnect();\n        this.$obs_targets = null;\n      }\n\n      if (on) {\n        this.$obs_targets = (0, _observeDom.default)(this.$el, function () {\n          _this3.handleEvent('mutation');\n        }, {\n          subtree: true,\n          childList: true,\n          attributes: true,\n          attributeFilter: ['href']\n        });\n        this.$obs_scroller = (0, _observeDom.default)(this.getScroller(), function () {\n          _this3.handleEvent('mutation');\n        }, {\n          subtree: true,\n          childList: true,\n          characterData: true,\n          attributes: true,\n          attributeFilter: ['id', 'style', 'class']\n        });\n      }\n    } // general event handler\n\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(evt) {\n      var type = typeof evt === 'string' ? evt : evt.type;\n      var self = this;\n\n      function resizeThrottle() {\n        if (!self.$resizeTimeout) {\n          self.$resizeTimeout = setTimeout(function () {\n            self.refresh();\n            self.process();\n            self.$resizeTimeout = null;\n          }, self.$config.throttle);\n        }\n      }\n\n      if (type === 'scroll') {\n        if (!this.$obs_scroller) {\n          // Just in case we are added to the DOM before the scroll target is\n          // We re-instantiate our listeners, just in case\n          this.listen();\n        }\n\n        this.process();\n      } else if (/(resize|orientationchange|mutation|refresh)/.test(type)) {\n        // Postpone these events by throttle time\n        resizeThrottle();\n      }\n    } // Refresh the list of target links on the element we are applied to\n\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      var _this4 = this;\n\n      var scroller = this.getScroller();\n\n      if (!scroller) {\n        return;\n      }\n\n      var autoMethod = scroller !== scroller.window ? OffsetMethod.POSITION : OffsetMethod.OFFSET;\n      var method = this.$config.method === 'auto' ? autoMethod : this.$config.method;\n      var methodFn = method === OffsetMethod.POSITION ? _dom.position : _dom.offset;\n      var offsetBase = method === OffsetMethod.POSITION ? this.getScrollTop() : 0;\n      this.$offsets = [];\n      this.$targets = [];\n      this.$scrollHeight = this.getScrollHeight(); // Find all the unique link href's\n\n      (0, _dom.selectAll)(this.$selector, this.$el).map(function (link) {\n        return (0, _dom.getAttr)(link, 'href');\n      }).filter(function (href) {\n        return HREF_REGEX.test(href || '');\n      }).map(function (href) {\n        var el = (0, _dom.select)(href, scroller);\n\n        if ((0, _dom.isVisible)(el)) {\n          return {\n            offset: parseInt(methodFn(el).top, 10) + offsetBase,\n            target: href\n          };\n        }\n\n        return null;\n      }).filter(function (item) {\n        return item;\n      }).sort(function (a, b) {\n        return a.offset - b.offset;\n      }).reduce(function (memo, item) {\n        // record only unique targets/offfsets\n        if (!memo[item.target]) {\n          _this4.$offsets.push(item.offset);\n\n          _this4.$targets.push(item.target);\n\n          memo[item.target] = true;\n        }\n\n        return memo;\n      }, {});\n      return this;\n    } // Handle activating/clearing\n\n  }, {\n    key: \"process\",\n    value: function process() {\n      var scrollTop = this.getScrollTop() + this.$config.offset;\n      var scrollHeight = this.getScrollHeight();\n      var maxScroll = this.$config.offset + scrollHeight - this.getOffsetHeight();\n\n      if (this.$scrollHeight !== scrollHeight) {\n        this.refresh();\n      }\n\n      if (scrollTop >= maxScroll) {\n        var target = this.$targets[this.$targets.length - 1];\n\n        if (this.$activeTarget !== target) {\n          this.activate(target);\n        }\n\n        return;\n      }\n\n      if (this.$activeTarget && scrollTop < this.$offsets[0] && this.$offsets[0] > 0) {\n        this.$activeTarget = null;\n        this.clear();\n        return;\n      }\n\n      for (var i = this.$offsets.length; i--;) {\n        var isActiveTarget = this.$activeTarget !== this.$targets[i] && scrollTop >= this.$offsets[i] && (typeof this.$offsets[i + 1] === 'undefined' || scrollTop < this.$offsets[i + 1]);\n\n        if (isActiveTarget) {\n          this.activate(this.$targets[i]);\n        }\n      }\n    }\n  }, {\n    key: \"getScroller\",\n    value: function getScroller() {\n      if (this.$scroller) {\n        return this.$scroller;\n      }\n\n      var scroller = this.$config.element;\n\n      if (!scroller) {\n        return null;\n      } else if ((0, _dom.isElement)(scroller.$el)) {\n        scroller = scroller.$el;\n      } else if (typeof scroller === 'string') {\n        scroller = (0, _dom.select)(scroller);\n      }\n\n      if (!scroller) {\n        return null;\n      }\n\n      this.$scroller = scroller.tagName === 'BODY' ? window : scroller;\n      return this.$scroller;\n    }\n  }, {\n    key: \"getScrollTop\",\n    value: function getScrollTop() {\n      var scroller = this.getScroller();\n      return scroller === window ? scroller.pageYOffset : scroller.scrollTop;\n    }\n  }, {\n    key: \"getScrollHeight\",\n    value: function getScrollHeight() {\n      return this.getScroller().scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);\n    }\n  }, {\n    key: \"getOffsetHeight\",\n    value: function getOffsetHeight() {\n      var scroller = this.getScroller();\n      return scroller === window ? window.innerHeight : (0, _dom.getBCR)(scroller).height;\n    }\n  }, {\n    key: \"activate\",\n    value: function activate(target) {\n      var _this5 = this;\n\n      this.$activeTarget = target;\n      this.clear(); // Grab the list of target links (<a href=\"{$target}\">)\n\n      var links = (0, _dom.selectAll)(this.$selector.split(',').map(function (selector) {\n        return \"\".concat(selector, \"[href=\\\"\").concat(target, \"\\\"]\");\n      }).join(','), this.$el);\n      links.forEach(function (link) {\n        if ((0, _dom.hasClass)(link, ClassName.DROPDOWN_ITEM)) {\n          // This is a dropdown item, so find the .dropdown-toggle and set it's state\n          var dropdown = (0, _dom.closest)(Selector.DROPDOWN, link);\n\n          if (dropdown) {\n            _this5.setActiveState((0, _dom.select)(Selector.DROPDOWN_TOGGLE, dropdown), true);\n          } // Also set this link's state\n\n\n          _this5.setActiveState(link, true);\n        } else {\n          // Set triggered link as active\n          _this5.setActiveState(link, true);\n\n          if ((0, _dom.matches)(link.parentElement, Selector.NAV_ITEMS)) {\n            // Handle nav-link inside nav-item, and set nav-item active\n            _this5.setActiveState(link.parentElement, true);\n          } // Set triggered links parents as active\n          // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor\n\n\n          var el = link;\n\n          while (el) {\n            el = (0, _dom.closest)(Selector.NAV_LIST_GROUP, el);\n            var sibling = el ? el.previousElementSibling : null;\n\n            if ((0, _dom.matches)(sibling, \"\".concat(Selector.NAV_LINKS, \", \").concat(Selector.LIST_ITEMS))) {\n              _this5.setActiveState(sibling, true);\n            } // Handle special case where nav-link is inside a nav-item\n\n\n            if ((0, _dom.matches)(sibling, Selector.NAV_ITEMS)) {\n              _this5.setActiveState((0, _dom.select)(Selector.NAV_LINKS, sibling), true); // Add active state to nav-item as well\n\n\n              _this5.setActiveState(sibling, true);\n            }\n          }\n        }\n      }); // Signal event to via $root, passing ID of activaed target and reference to array of links\n\n      if (links && links.length > 0 && this.$root) {\n        this.$root.$emit(ACTIVATE_EVENT, target, links);\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var _this6 = this;\n\n      (0, _dom.selectAll)(\"\".concat(this.$selector, \", \").concat(Selector.NAV_ITEMS), this.$el).filter(function (el) {\n        return (0, _dom.hasClass)(el, ClassName.ACTIVE);\n      }).forEach(function (el) {\n        return _this6.setActiveState(el, false);\n      });\n    }\n  }, {\n    key: \"setActiveState\",\n    value: function setActiveState(el, active) {\n      if (!el) {\n        return;\n      }\n\n      if (active) {\n        (0, _dom.addClass)(el, ClassName.ACTIVE);\n      } else {\n        (0, _dom.removeClass)(el, ClassName.ACTIVE);\n      }\n    }\n  }], [{\n    key: \"Name\",\n    get: function get() {\n      return NAME;\n    }\n  }, {\n    key: \"Default\",\n    get: function get() {\n      return Default;\n    }\n  }, {\n    key: \"DefaultType\",\n    get: function get() {\n      return DefaultType;\n    }\n  }]);\n\n  return ScrollSpy;\n}();\n\nvar _default = ScrollSpy;\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _popover = require(\"./popover\");\n\nvar _plugins = require(\"../../utils/plugins\");\n\nvar directives = {\n  bPopover: _popover.default\n};\nvar _default = {\n  install: function install(Vue) {\n    (0, _plugins.registerDirectives)(Vue, directives);\n  }\n};\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _target = require(\"../../utils/target\");\n\nvar _dom = require(\"../../utils/dom\");\n\nvar listenTypes = {\n  click: true\n};\nvar _default = {\n  // eslint-disable-next-line no-shadow-restricted-names\n  bind: function bind(el, binding, vnode) {\n    (0, _target.bindTargets)(vnode, binding, listenTypes, function (_ref) {\n      var targets = _ref.targets,\n          vnode = _ref.vnode;\n      targets.forEach(function (target) {\n        vnode.context.$root.$emit('bv::show::modal', target, vnode.elm);\n      });\n    });\n\n    if (el.tagName !== 'BUTTON') {\n      // If element is not a button, we add `role=\"button\"` for accessibility\n      (0, _dom.setAttr)(el, 'role', 'button');\n    }\n  },\n  unbind: function unbind(el, binding, vnode) {\n    (0, _target.unbindTargets)(vnode, binding, listenTypes);\n\n    if (el.tagName !== 'BUTTON') {\n      // If element is not a button, we add `role=\"button\"` for accessibility\n      (0, _dom.removeAttr)(el, 'role', 'button');\n    }\n  }\n};\nexports.default = _default;"],"sourceRoot":""}